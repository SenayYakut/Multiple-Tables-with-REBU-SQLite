-- Lets examine the tree tables
SELECT * FROM trips;

SELECT * FROM riders;

SELECT * FROM cars;


SELECT riders.first,
   riders.last,
   cars.model
FROM riders, cars;

-- Create a Trip Log with the trips and its users.
SELECT *
FROM trips
LEFT JOIN riders
  ON trips.rider_id = riders.id;

SELECT trips.date, 
   trips.pickup, 
   trips.dropoff, 
   trips.type, 
   trips.cost,
   riders.first, 
   riders.last,
   riders.username
FROM trips
LEFT JOIN riders 
  ON trips.rider_id = riders.id;

-- Create a link between the trips and the cars used during those trips.

SELECT *
FROM trips
JOIN cars
  ON trips.car_id = cars.id;

  -- The new riders data are in! There are three new users this month. Stack the riders table on top of the new table named riders2

SELECT *
FROM riders
UNION
SELECT *
FROM riders2;


-- What is the average cost for a trip, Round it with 2 decimel place

SELECT ROUND(AVG(cost),2)
FROM trips;

-- REBU is looking to do an email campaign for all the irregular users. Find all the riders who have used REBU less than 500 time.

SELECT username, total_trips
FROM riders
WHERE total_trips < 500
GROUP BY username;

-- Calculate the number of cars that are active

SELECT COUNT(status) 
FROM cars
WHERE status = 'active';


-- Itâ€™s safety recall time for cars that have been on the road for a while. Write a query that finds the two cars that have the highest trips_completed

SELECT *
FROM cars
ORDER BY trips_completed DESC
LIMIT 2;

